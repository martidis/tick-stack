version: "3.7"
services:
  grafana:
    image: grafana/grafana:6.0.2
    container_name: 'grafana'
    ports:
      - '3000:3000'
    volumes:
      - ./grafana/datasources/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/dashboards/dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml
      - ./grafana/dashboards/custom-app-uptime.json:/var/lib/grafana/dashboards/custom-app-uptime.json
      - ./grafana-data:/var/lib/grafana
    depends_on:
      - influxdb
    networks:
      - monitoring
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=secret
  influxdb:
    image: influxdb
    container_name: influxdb
    restart: always
    ports:
      - 8086:8086
    networks:
      - monitoring
    environment:
      - INFLUXDB_DB=telegraf
      - INFLUXDB_ADMIN_ENABLED=true
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=supersecretpassword
      - INFLUXDB_USER=telegraf
      - INFLUXDB_USER_PASSWORD=secretpassword
    volumes:
      - influxdb-volume:/var/lib/influxdb
  telegraf:
    image: telegraf
    container_name: telegraf
    restart: always
    depends_on:
      - influxdb
    networks:
      - monitoring
    environment:
      HOST_PROC: /rootfs/proc
      HOST_SYS: /rootfs/sys
      HOST_ETC: /rootfs/etc
    hostname: localhost
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/rootfs/sys:ro
      - /proc:/rootfs/proc:ro
      - /etc:/rootfs/etc:ro
  custom-app:
    image: martidis/node-web-app
    container_name: custom-app
    restart: on-failure # restart on non-zero exit code
    ports:
      - "49160:8080"
    networks:
      - monitoring
networks:
  monitoring:
volumes:
  grafana-data: {}
  influxdb-volume: